server {
    listen 80;
    listen [::]:80;
	
    index app.php index.php index.html;
    server_name localhost;
    error_log  /var/log/nginx/nginx-error.log;
    access_log /var/log/nginx/nginx-access.log;
    root /var/www/web/;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /app.php$is_args$args;
    }

    location ~ /\.ht {
        deny  all;
    }
    
    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        
        fastcgi_pass php:9000;
        fastcgi_index app.php;
        include fastcgi_params;
        
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        internal;
    }

    location ~ \.php$ {
        return 404;
    }

}